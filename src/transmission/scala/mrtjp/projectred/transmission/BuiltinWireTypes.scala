package mrtjp.projectred.transmission

import codechicken.lib.colour.EnumColour
import mrtjp.projectred.ProjectRedTransmission

object BuiltinWireTypes {
    //@formatter:off
    val RED_ALLOY: WireType = WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemRedAlloyWire, () => TransmissionContent.partRedAlloyWire, wt => new RedAlloyWirePart(wt), 0, 0xC80000, "redalloy")

    val INSULATED_WHITE: WireType =      WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemInsulatedWhiteWire,     () => TransmissionContent.partInsulatedWhiteWire,     wt => new InsulatedRedAlloyPart(wt), EnumColour.WHITE,      1, "insulated/whiteoff",     "insulated/whiteon")
    val INSULATED_ORANGE: WireType =     WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemInsulatedOrangeWire,    () => TransmissionContent.partInsulatedOrangeWire,    wt => new InsulatedRedAlloyPart(wt), EnumColour.ORANGE,     1, "insulated/orangeoff",    "insulated/orangeon")
    val INSULATED_MAGENTA: WireType =    WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemInsulatedMagentaWire,   () => TransmissionContent.partInsulatedMagentaWire,   wt => new InsulatedRedAlloyPart(wt), EnumColour.MAGENTA,    1, "insulated/magentaoff",   "insulated/magentaon")
    val INSULATED_LIGHT_BLUE: WireType = WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemInsulatedLightBlueWire, () => TransmissionContent.partInsulatedLightBlueWire, wt => new InsulatedRedAlloyPart(wt), EnumColour.LIGHT_BLUE, 1, "insulated/lightblueoff", "insulated/lightblueon")
    val INSULATED_YELLOW: WireType =     WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemInsulatedYellowWire,    () => TransmissionContent.partInsulatedYellowWire,    wt => new InsulatedRedAlloyPart(wt), EnumColour.YELLOW,     1, "insulated/yellowoff",    "insulated/yellowon")
    val INSULATED_LIME: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemInsulatedLimeWire,      () => TransmissionContent.partInsulatedLimeWire,      wt => new InsulatedRedAlloyPart(wt), EnumColour.LIME,       1, "insulated/limeoff",      "insulated/limeon")
    val INSULATED_PINK: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemInsulatedPinkWire,      () => TransmissionContent.partInsulatedPinkWire,      wt => new InsulatedRedAlloyPart(wt), EnumColour.PINK,       1, "insulated/pinkoff",      "insulated/pinkon")
    val INSULATED_GRAY: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemInsulatedGrayWire,      () => TransmissionContent.partInsulatedGrayWire,      wt => new InsulatedRedAlloyPart(wt), EnumColour.GRAY,       1, "insulated/greyoff",      "insulated/greyon")
    val INSULATED_LIGHT_GRAY: WireType = WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemInsulatedLightGrayWire, () => TransmissionContent.partInsulatedLightGrayWire, wt => new InsulatedRedAlloyPart(wt), EnumColour.LIGHT_GRAY, 1, "insulated/lightgreyoff", "insulated/lightgreyon")
    val INSULATED_CYAN: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemInsulatedCyanWire,      () => TransmissionContent.partInsulatedCyanWire,      wt => new InsulatedRedAlloyPart(wt), EnumColour.CYAN,       1, "insulated/cyanoff",      "insulated/cyanon")
    val INSULATED_PURPLE: WireType =     WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemInsulatedPurpleWire,    () => TransmissionContent.partInsulatedPurpleWire,    wt => new InsulatedRedAlloyPart(wt), EnumColour.PURPLE,     1, "insulated/purpleoff",    "insulated/purpleon")
    val INSULATED_BLUE: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemInsulatedBlueWire,      () => TransmissionContent.partInsulatedBlueWire,      wt => new InsulatedRedAlloyPart(wt), EnumColour.BLUE,       1, "insulated/blueoff",      "insulated/blueon")
    val INSULATED_BROWN: WireType =      WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemInsulatedBrownWire,     () => TransmissionContent.partInsulatedBrownWire,     wt => new InsulatedRedAlloyPart(wt), EnumColour.BROWN,      1, "insulated/brownoff",     "insulated/brownon")
    val INSULATED_GREEN: WireType =      WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemInsulatedGreenWire,     () => TransmissionContent.partInsulatedGreenWire,     wt => new InsulatedRedAlloyPart(wt), EnumColour.GREEN,      1, "insulated/greenoff",     "insulated/greenon")
    val INSULATED_RED: WireType =        WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemInsulatedRedWire,       () => TransmissionContent.partInsulatedRedWire,       wt => new InsulatedRedAlloyPart(wt), EnumColour.RED,        1, "insulated/redoff",       "insulated/redon")
    val INSULATED_BLACK: WireType =      WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemInsulatedBlackWire,     () => TransmissionContent.partInsulatedBlackWire,     wt => new InsulatedRedAlloyPart(wt), EnumColour.BLACK,      1, "insulated/blackoff",     "insulated/blackon")

    val BUNDLED_NEUTRAL: WireType =    WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledNeutralWire,   () => TransmissionContent.partBundledNeutralWire,   wt => new BundledCablePart(wt),                        2, "bundled/neutral")
    val BUNDLED_WHITE: WireType =      WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledWhiteWire,     () => TransmissionContent.partBundledWhiteWire,     wt => new BundledCablePart(wt), EnumColour.WHITE,      2, "bundled/white")
    val BUNDLED_ORANGE: WireType =     WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledOrangeWire,    () => TransmissionContent.partBundledOrangeWire,    wt => new BundledCablePart(wt), EnumColour.ORANGE,     2, "bundled/orange")
    val BUNDLED_MAGENTA: WireType =    WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledMagentaWire,   () => TransmissionContent.partBundledMagentaWire,   wt => new BundledCablePart(wt), EnumColour.MAGENTA,    2, "bundled/magenta")
    val BUNDLED_LIGHT_BLUE: WireType = WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledLightBlueWire, () => TransmissionContent.partBundledLightBlueWire, wt => new BundledCablePart(wt), EnumColour.LIGHT_BLUE, 2, "bundled/lightblue")
    val BUNDLED_YELLOW: WireType =     WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledYellowWire,    () => TransmissionContent.partBundledYellowWire,    wt => new BundledCablePart(wt), EnumColour.YELLOW,     2, "bundled/yellow")
    val BUNDLED_LIME: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledLimeWire,      () => TransmissionContent.partBundledLimeWire,      wt => new BundledCablePart(wt), EnumColour.LIME,       2, "bundled/lime")
    val BUNDLED_PINK: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledPinkWire,      () => TransmissionContent.partBundledPinkWire,      wt => new BundledCablePart(wt), EnumColour.PINK,       2, "bundled/pink")
    val BUNDLED_GRAY: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledGrayWire,      () => TransmissionContent.partBundledGrayWire,      wt => new BundledCablePart(wt), EnumColour.GRAY,       2, "bundled/grey")
    val BUNDLED_LIGHT_GRAY: WireType = WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledLightGrayWire, () => TransmissionContent.partBundledLightGrayWire, wt => new BundledCablePart(wt), EnumColour.LIGHT_GRAY, 2, "bundled/lightgrey")
    val BUNDLED_CYAN: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledCyanWire,      () => TransmissionContent.partBundledCyanWire,      wt => new BundledCablePart(wt), EnumColour.CYAN,       2, "bundled/cyan")
    val BUNDLED_PURPLE: WireType =     WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledPurpleWire,    () => TransmissionContent.partBundledPurpleWire,    wt => new BundledCablePart(wt), EnumColour.PURPLE,     2, "bundled/purple")
    val BUNDLED_BLUE: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledBlueWire,      () => TransmissionContent.partBundledBlueWire,      wt => new BundledCablePart(wt), EnumColour.BLUE,       2, "bundled/blue")
    val BUNDLED_BROWN: WireType =      WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledBrownWire,     () => TransmissionContent.partBundledBrownWire,     wt => new BundledCablePart(wt), EnumColour.BROWN,      2, "bundled/brown")
    val BUNDLED_GREEN: WireType =      WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledGreenWire,     () => TransmissionContent.partBundledGreenWire,     wt => new BundledCablePart(wt), EnumColour.GREEN,      2, "bundled/green")
    val BUNDLED_RED: WireType =        WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledRedWire,       () => TransmissionContent.partBundledRedWire,       wt => new BundledCablePart(wt), EnumColour.RED,        2, "bundled/red")
    val BUNDLED_BLACK: WireType =      WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemBundledBlackWire,     () => TransmissionContent.partBundledBlackWire,     wt => new BundledCablePart(wt), EnumColour.BLACK,      2, "bundled/black")

    val POWER_LOWLOAD: WireType = WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemPowerLowLoadWire, () => TransmissionContent.partPowerLowLoadWire, wt => new LowLoadPowerLine(wt), 1, "power/lowload")

    val FRAMED_RED_ALLOY: WireType = WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedRedAlloyWire, () => TransmissionContent.partFramedRedAlloyWire, wt => new FramedRedAlloyWirePart(wt), 0, 0xC80000, "redalloy")

    val FRAMED_INSULATED_WHITE: WireType =      WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedInsulatedWhiteWire,     () => TransmissionContent.partFramedInsulatedWhiteWire,     wt => new FramedInsulatedRedAlloyPart(wt), EnumColour.WHITE,      1, "insulated/whiteoff",     "insulated/whiteon")
    val FRAMED_INSULATED_ORANGE: WireType =     WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedInsulatedOrangeWire,    () => TransmissionContent.partFramedInsulatedOrangeWire,    wt => new FramedInsulatedRedAlloyPart(wt), EnumColour.ORANGE,     1, "insulated/orangeoff",    "insulated/orangeon")
    val FRAMED_INSULATED_MAGENTA: WireType =    WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedInsulatedMagentaWire,   () => TransmissionContent.partFramedInsulatedMagentaWire,   wt => new FramedInsulatedRedAlloyPart(wt), EnumColour.MAGENTA,    1, "insulated/magentaoff",   "insulated/magentaon")
    val FRAMED_INSULATED_LIGHT_BLUE: WireType = WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedInsulatedLightBlueWire, () => TransmissionContent.partFramedInsulatedLightBlueWire, wt => new FramedInsulatedRedAlloyPart(wt), EnumColour.LIGHT_BLUE, 1, "insulated/lightblueoff", "insulated/lightblueon")
    val FRAMED_INSULATED_YELLOW: WireType =     WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedInsulatedYellowWire,    () => TransmissionContent.partFramedInsulatedYellowWire,    wt => new FramedInsulatedRedAlloyPart(wt), EnumColour.YELLOW,     1, "insulated/yellowoff",    "insulated/yellowon")
    val FRAMED_INSULATED_LIME: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedInsulatedLimeWire,      () => TransmissionContent.partFramedInsulatedLimeWire,      wt => new FramedInsulatedRedAlloyPart(wt), EnumColour.LIME,       1, "insulated/limeoff",      "insulated/limeon")
    val FRAMED_INSULATED_PINK: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedInsulatedPinkWire,      () => TransmissionContent.partFramedInsulatedPinkWire,      wt => new FramedInsulatedRedAlloyPart(wt), EnumColour.PINK,       1, "insulated/pinkoff",      "insulated/pinkon")
    val FRAMED_INSULATED_GRAY: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedInsulatedGrayWire,      () => TransmissionContent.partFramedInsulatedGrayWire,      wt => new FramedInsulatedRedAlloyPart(wt), EnumColour.GRAY,       1, "insulated/greyoff",      "insulated/greyon")
    val FRAMED_INSULATED_LIGHT_GRAY: WireType = WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedInsulatedLightGrayWire, () => TransmissionContent.partFramedInsulatedLightGrayWire, wt => new FramedInsulatedRedAlloyPart(wt), EnumColour.LIGHT_GRAY, 1, "insulated/lightgreyoff", "insulated/lightgreyon")
    val FRAMED_INSULATED_CYAN: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedInsulatedCyanWire,      () => TransmissionContent.partFramedInsulatedCyanWire,      wt => new FramedInsulatedRedAlloyPart(wt), EnumColour.CYAN,       1, "insulated/cyanoff",      "insulated/cyanon")
    val FRAMED_INSULATED_PURPLE: WireType =     WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedInsulatedPurpleWire,    () => TransmissionContent.partFramedInsulatedPurpleWire,    wt => new FramedInsulatedRedAlloyPart(wt), EnumColour.PURPLE,     1, "insulated/purpleoff",    "insulated/purpleon")
    val FRAMED_INSULATED_BLUE: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedInsulatedBlueWire,      () => TransmissionContent.partFramedInsulatedBlueWire,      wt => new FramedInsulatedRedAlloyPart(wt), EnumColour.BLUE,       1, "insulated/blueoff",      "insulated/blueon")
    val FRAMED_INSULATED_BROWN: WireType =      WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedInsulatedBrownWire,     () => TransmissionContent.partFramedInsulatedBrownWire,     wt => new FramedInsulatedRedAlloyPart(wt), EnumColour.BROWN,      1, "insulated/brownoff",     "insulated/brownon")
    val FRAMED_INSULATED_GREEN: WireType =      WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedInsulatedGreenWire,     () => TransmissionContent.partFramedInsulatedGreenWire,     wt => new FramedInsulatedRedAlloyPart(wt), EnumColour.GREEN,      1, "insulated/greenoff",     "insulated/greenon")
    val FRAMED_INSULATED_RED: WireType =        WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedInsulatedRedWire,       () => TransmissionContent.partFramedInsulatedRedWire,       wt => new FramedInsulatedRedAlloyPart(wt), EnumColour.RED,        1, "insulated/redoff",       "insulated/redon")
    val FRAMED_INSULATED_BLACK: WireType =      WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedInsulatedBlackWire,     () => TransmissionContent.partFramedInsulatedBlackWire,     wt => new FramedInsulatedRedAlloyPart(wt), EnumColour.BLACK,      1, "insulated/blackoff",     "insulated/blackon")

    val FRAMED_BUNDLED_NEUTRAL: WireType =    WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledNeutralWire,   () => TransmissionContent.partFramedBundledNeutralWire, wt => new FramedBundledCablePart(wt), 2, "bundled/neutral")
    val FRAMED_BUNDLED_WHITE: WireType =      WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledWhiteWire,     () => TransmissionContent.partFramedBundledWhiteWire,     wt => new FramedBundledCablePart(wt), EnumColour.WHITE,      2, "bundled/white")
    val FRAMED_BUNDLED_ORANGE: WireType =     WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledOrangeWire,    () => TransmissionContent.partFramedBundledOrangeWire,    wt => new FramedBundledCablePart(wt), EnumColour.ORANGE,     2, "bundled/orange")
    val FRAMED_BUNDLED_MAGENTA: WireType =    WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledMagentaWire,   () => TransmissionContent.partFramedBundledMagentaWire,   wt => new FramedBundledCablePart(wt), EnumColour.MAGENTA,    2, "bundled/magenta")
    val FRAMED_BUNDLED_LIGHT_BLUE: WireType = WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledLightBlueWire, () => TransmissionContent.partFramedBundledLightBlueWire, wt => new FramedBundledCablePart(wt), EnumColour.LIGHT_BLUE, 2, "bundled/lightblue")
    val FRAMED_BUNDLED_YELLOW: WireType =     WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledYellowWire,    () => TransmissionContent.partFramedBundledYellowWire,    wt => new FramedBundledCablePart(wt), EnumColour.YELLOW,     2, "bundled/yellow")
    val FRAMED_BUNDLED_LIME: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledLimeWire,      () => TransmissionContent.partFramedBundledLimeWire,      wt => new FramedBundledCablePart(wt), EnumColour.LIME,       2, "bundled/lime")
    val FRAMED_BUNDLED_PINK: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledPinkWire,      () => TransmissionContent.partFramedBundledPinkWire,      wt => new FramedBundledCablePart(wt), EnumColour.PINK,       2, "bundled/pink")
    val FRAMED_BUNDLED_GRAY: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledGrayWire,      () => TransmissionContent.partFramedBundledGrayWire,      wt => new FramedBundledCablePart(wt), EnumColour.GRAY,       2, "bundled/grey")
    val FRAMED_BUNDLED_LIGHT_GRAY: WireType = WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledLightGrayWire, () => TransmissionContent.partFramedBundledLightGrayWire, wt => new FramedBundledCablePart(wt), EnumColour.LIGHT_GRAY, 2, "bundled/lightgrey")
    val FRAMED_BUNDLED_CYAN: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledCyanWire,      () => TransmissionContent.partFramedBundledCyanWire,      wt => new FramedBundledCablePart(wt), EnumColour.CYAN,       2, "bundled/cyan")
    val FRAMED_BUNDLED_PURPLE: WireType =     WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledPurpleWire,    () => TransmissionContent.partFramedBundledPurpleWire,    wt => new FramedBundledCablePart(wt), EnumColour.PURPLE,     2, "bundled/purple")
    val FRAMED_BUNDLED_BLUE: WireType =       WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledBlueWire,      () => TransmissionContent.partFramedBundledBlueWire,      wt => new FramedBundledCablePart(wt), EnumColour.BLUE,       2, "bundled/blue")
    val FRAMED_BUNDLED_BROWN: WireType =      WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledBrownWire,     () => TransmissionContent.partFramedBundledBrownWire,     wt => new FramedBundledCablePart(wt), EnumColour.BROWN,      2, "bundled/brown")
    val FRAMED_BUNDLED_GREEN: WireType =      WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledGreenWire,     () => TransmissionContent.partFramedBundledGreenWire,     wt => new FramedBundledCablePart(wt), EnumColour.GREEN,      2, "bundled/green")
    val FRAMED_BUNDLED_RED: WireType =        WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledRedWire,       () => TransmissionContent.partFramedBundledRedWire,       wt => new FramedBundledCablePart(wt), EnumColour.RED,        2, "bundled/red")
    val FRAMED_BUNDLED_BLACK: WireType =      WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedBundledBlackWire,     () => TransmissionContent.partFramedBundledBlackWire,     wt => new FramedBundledCablePart(wt), EnumColour.BLACK,      2, "bundled/black")

    val FRAMED_POWER_LOWLOAD: WireType = WireType.registerWireType(ProjectRedTransmission.MOD_ID, () => TransmissionContent.itemFramedPowerLowLoadWire, () => TransmissionContent.partFramedPowerLowLoadWire, wt => new FramedLowLoadPowerLine(wt), 1, "power/lowload")
    //@formatter:on
}
